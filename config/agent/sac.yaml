agent:
  name: sac
  class: agent.sac.SACAgent
  params:
    obs_dim: ??? # to be specified later
    goal_dim: ??? # critic_cfg
    action_dim: ??? # to be specified later
    action_range: ??? # to be specified later
    device: ${device}
    critic_cfg: ${discrete_critic} # ${double_q_critic}
    actor_cfg: ${categorical_actor} # ${diag_gaussian_actor}
    discount: 1 #0.99
    init_temperature: 0.1
    alpha_lr:  1e-5
    alpha_betas: [0.9, 0.999]
    actor_lr: 1e-5
    actor_betas: [0.9, 0.999]
    actor_update_frequency: 1
    critic_lr:  1e-5
    critic_betas: [0.9, 0.999]
    critic_tau: 0.005
    critic_target_update_frequency: 2
    batch_size: 1024
    
double_q_critic:
  class: agent.critic.DoubleQCritic
  params:
    obs_dim: ${agent.params.obs_dim}
    goal_dim: ${agent.params.goal_dim}
    action_dim: ${agent.params.action_dim}
    hidden_dim: 1024
    hidden_depth: 2

discrete_critic:
  class: agent.critic.DiscreteCritic
  params:
    obs_dim: ${agent.params.obs_dim}
    goal_dim: ${agent.params.goal_dim}
    action_dim: ${agent.params.action_dim}
    action_range: ${agent.params.action_range}
    hidden_dim: 1024
    hidden_depth: 2

categorical_actor:
  class: agent.actor.CategoricalActor
  params:
    obs_dim: ${agent.params.obs_dim}
    goal_dim: ${agent.params.goal_dim}
    action_dim: ${agent.params.action_range}
    hidden_depth: 2
    hidden_dim: 1024

diag_gaussian_actor:
  class: agent.actor.DiagGaussianActor
  params:
    obs_dim: ${agent.params.obs_dim}
    goal_dim: ${agent.params.goal_dim}
    action_dim: ${agent.params.action_dim}
    hidden_depth: 2
    hidden_dim: 1024
    log_std_bounds: [-5, 2]

